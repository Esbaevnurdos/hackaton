basePath: /
definitions:
  main.Place:
    properties:
      comments:
        items:
          type: string
        type: array
      description:
        type: string
      id:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      photoURLs:
        items:
          type: string
        type: array
      placeName:
        type: string
      rating:
        type: number
    type: object
host: localhost:8080
info:
  contact: {}
  description: This API manages tourist places in Taraz, allowing CRUD operations,
    ratings, comments, and photos.
  title: Taraz Tourist Places API
  version: "1.0"
paths:
  /places:
    get:
      description: Retrieves all tourist places in Taraz
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Place'
            type: array
      summary: Get all places
      tags:
      - places
    post:
      consumes:
      - application/json
      description: Adds a new tourist place
      parameters:
      - description: New Place
        in: body
        name: place
        required: true
        schema:
          $ref: '#/definitions/main.Place'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Place'
      summary: Add a new place
      tags:
      - places
  /places/{id}:
    delete:
      description: Deletes a place by ID
      parameters:
      - description: Place ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      summary: Delete a place
      tags:
      - places
    get:
      description: Retrieves details of a specific place
      parameters:
      - description: Place ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Place'
        "404":
          description: Not Found
      summary: Get a place by ID
      tags:
      - places
    put:
      description: Updates the details of a specific place
      parameters:
      - description: Place ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated Place
        in: body
        name: place
        required: true
        schema:
          $ref: '#/definitions/main.Place'
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      summary: Update a place
      tags:
      - places
  /places/{id}/comment:
    post:
      description: Adds a comment to a tourist place
      parameters:
      - description: Place ID
        in: path
        name: id
        required: true
        type: string
      - description: Comment
        in: body
        name: comment
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
      summary: Add a comment to a place
      tags:
      - places
  /places/{id}/photo:
    post:
      consumes:
      - application/json
      description: Adds a photo URL to a tourist place
      parameters:
      - description: Place ID
        in: path
        name: id
        required: true
        type: string
      - description: Photo URL
        in: body
        name: photo
        required: true
        schema:
          properties:
            url:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: Add a photo to a place
      tags:
      - places
  /places/{id}/rating:
    post:
      description: Updates the rating of a place
      parameters:
      - description: Place ID
        in: path
        name: id
        required: true
        type: string
      - description: New Rating
        in: body
        name: rating
        required: true
        schema:
          type: number
      responses:
        "200":
          description: OK
      summary: Add a rating to a place
      tags:
      - places
  /swagger/:
    get:
      description: Provides API documentation
      responses:
        "200":
          description: OK
      summary: Serve Swagger documentation
      tags:
      - docs
swagger: "2.0"
